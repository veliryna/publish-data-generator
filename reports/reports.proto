syntax = "proto3";

option go_package = "data-generator/reports";

package reports;

service ReportService {
  // stream time-based and event-based reports
  rpc StreamTimeBasedReports(EmptyRequest) returns (stream TimeBasedReport);
  rpc StreamEventBasedReports(EmptyRequest) returns (stream EventBasedReport);

  // control device mute state
  rpc MuteDevice(DeviceControlRequest) returns (DeviceControlResponse);
  rpc UnmuteDevice(DeviceControlRequest) returns (DeviceControlResponse);

  // current mute/unmute status of all devices
  rpc GetDeviceStatuses(EmptyRequest) returns (DeviceStatusResponse);
}

message EmptyRequest {}

message TimeBasedReport {
  int32 device_id = 1;
  int64 timestamp = 2;
  int32 distance = 3;
  repeated int64 heartbeats = 4;
  repeated int64 breaths = 5;
}

message DeviceControlRequest {
  int32 device_id = 1;
}

message DeviceControlResponse {
  string message = 1;
}

message DeviceStatus {
  int32 device_id = 1;
  bool muted = 2;
}

message DeviceStatusResponse {
  repeated DeviceStatus statuses = 1;
}

message EventBasedReport {
    int32 device_id = 1;
    int64 timestamp = 2;
    int32 event_id = 3;
    repeated int32 event_data = 4;
}
